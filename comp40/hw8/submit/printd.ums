.section init
.zero r0
.temps r6, r7

stack_store:
 .space 10000

num:
 .space 10

.section text

build_copy:
 .temps r4, r6, r7
 r3 := r3 + stack_store
 r3 := r3 + 1
 m[r0][r3] := r1
 r3 := r3 - 1
 r3 := r3 - stack_store
store_loop:
 pop r5 off stack r2
 r3 := r3 + stack_store
 m[r0][r3] := r5
 r3 := r3 - stack_store
 push r5 on stack r2
 pop stack r2
 r3 := r3 - 1
 if (r3 == 0) goto init_print_numbers
 goto store_loop

init_print_numbers: 
r2 := m[r0][stack_pointer]
r3 := m[r0][stack_size] 
goto print_numbers

print_numbers:
 .temps r4, r6, r7
 if (r3 == 0) goto exit_print 
 output ">>> "
 r5 := r3 + stack_store
 r5 := m[r0][r5]
 if (r5 <s 0) goto print_neg
 if (r5 <s 10) goto print_single
 goto print_long

print_neg:
 .temps r4, r6, r7
 output "-"
 r5 := -r5
 if (r5 >s 9) goto after_neg_check
 goto print_single

print_single:
 r5 := r5 + '0'
 output r5
 output "\n"
 r3 := r3 - 1
 goto print_numbers

print_long:
 .temps r4, r6, r7
r1 := num
 m[r0][r1] := r5
after_neg_check:
 r1 := 1
push_loop:
 if (r5 <s 9) goto start_print
 r2 := r5 mod 10
 if (r2 == 0) goto push_zero
 r1 := r1 + num
 m[r0][r1] := r2
 r1 := r1 - num
 r1 := r1 + 1
 r5 := r5 - r2
 r5 := r5 / 10
after_zero_push:
 if (r5 >s 9) goto push_loop
start_print:
 r5 := r5 + '0'
 output r5
print_loop:
 r1 := r1 - 1
 r1 := r1 + num
 r5 := m[r0][r1]
 r1 := r1 - num
 r5 := r5 + '0'
 output r5
 if (r1 >s 1) goto print_loop
 output "\n"
 r1 := num
 r5 := m[r0][r1]
 r3 := r3 - 1
 goto print_numbers
 
push_zero:
 r1 := r1 + num
 m[r0][r1] := r0
 r1 := r1 - num
 r1 := r1 + 1
 r5 := r5 / 10
 goto after_zero_push
 
exit_print:
r1 := m[r0][return_add]
r2 := m[r0][stack_pointer]
r3 := m[r0][stack_size]
goto r1
