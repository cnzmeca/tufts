.section init
.temps r1, r6, r7

.section stk
.space 10000
endstack:


.section init
.zero r0

#Storage for important info
return_add:
.space 1
stack_pointer:
.space 1
stack_size:
.space 1

#Establishes jumptable
jumptable:
        .space 256
        r4 := 0
errors:
        r5 := jumptable + r4
        m[r0][r5] := input_error
        r4 := r4 + 1
        if(r4 <s 256) goto errors
        r4 := 48
digits:
        r5 := jumptable + r4
        m[r0][r5] := digit
        r4 := r4 + 1
        if(r4 <s 58) goto digits
functions:
        m[r0][jumptable + ' '] := waiting
        m[r0][jumptable + '\n'] := print
        m[r0][jumptable + '+'] := add
        m[r0][jumptable + '-'] := sub
        m[r0][jumptable + '*'] := mul
        m[r0][jumptable + '/'] := div
        m[r0][jumptable + '|'] := or
        m[r0][jumptable + '&'] := and
        m[r0][jumptable + 'c'] := neg
        m[r0][jumptable + '~'] := comp
        m[r0][jumptable + 's'] := swap
        m[r0][jumptable + 'd'] := dup
        m[r0][jumptable + 'p'] := del
        m[r0][jumptable + 'z'] := zero

start:
        r0 := 0
        r2 := endstack
        goto main linking r1
        halt
